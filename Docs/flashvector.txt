package
{
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.MouseEvent;
 
	public class FollowMouseAngle extends Sprite
	{
		private var ball:Ball; //creates an instance of the Ball class named 'ball'
		private var angle:Number; //holds the angle that will be used for the balls rotation
		private var radians:Number; //holds the angle (in radians) that will be calculated using trigonometry
		private var vX:Number = 0; //holds the horizontal velocity of the ball
		private var vY:Number = 0; //holds the vertical velocity of the ball
		private var dX:Number; //holds the distance between the ball and mouse horizontally
		private var dY:Number; //holds the distance between the ball and mouse vertically
		private var speed:Number = 15; //holds the constant speed that will be multiplied to give us our velocity components
 
		public function FollowMouseAngle():void
		{
			init();
		}
 
		private function init():void
		{
			ball = new Ball();
			addChild(ball);
			ball.x = stage.stageWidth / 2;
			ball.y = stage.stageHeight / 2;
 
			addEventListener(Event.ENTER_FRAME, onEnterFrame);
			stage.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);
		}
		private function onEnterFrame(event:Event):void
		{
			dX = mouseX - ball.x;
			dY = mouseY - ball.y;
			radians = Math.atan2(dY, dX);
			angle = radians * 180 / Math.PI;
			ball.rotation = angle;
 
			ball.x += vX;
			ball.y += vY;
 
			if  (ball.x - ball.width / 2 < 0 || ball.x + ball.width / 2 > stage.stageWidth)
			{
				vX *= -1;
			}
 
			if (ball.y - ball.height / 2 < 0 || ball.y + ball.height / 2 > stage.stageHeight)
			{
				vY *= -1;
			}
		}
 
		private function onMouseDown(event:MouseEvent):void
		{
			vX = Math.cos(radians) * speed;
			vY = Math.sin(radians) * speed;
		}
	}
}
